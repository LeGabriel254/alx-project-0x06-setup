import { configureStore, createSlice } from "@reduxjs/toolkit";
import { useDispatch } from "react-redux";

//  a slice for managing the counter state
const counterSlice = createSlice({
  // Name of the slice (used in actions and for debugging)
  name: "counter",

  // Initial state of the counter
  initialState: {
    value: 0, 
  },

  // Reducers define how state changes in response to actions
  reducers: {
    // Increment action: increases the counter value by 1
    increment: (state) => {
      state.value += 1;
    },

    // Decrement action: decreases the counter value by 1,
    // but only if the current value is greater than 0
    decrement: (state) => {
      state.value > 0 ? (state.value -= 1) : 0;
    },
  },
});

// Create and configure the Redux store
const store = configureStore({
  // Add the `counterSlice` reducer to the store
  reducer: {
    counter: counterSlice.reducer,
  },
});

// Export the actions generated by `createSlice`
export const { increment, decrement } = counterSlice.actions;

// the RootState type, which represents the overall state structure
export type RootState = ReturnType<typeof store.getState>;

//  the AppDispatch type, which represents the dispatch function type
export type AppDispatch = typeof store.dispatch;

// custom hook to use the `dispatch` function with the AppDispatch type
export const useAppDispatch = () => useDispatch<AppDispatch>();

// Export the store as the default export
export default store;
